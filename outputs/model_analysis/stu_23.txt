question1 answer:
Algorithm is a well-defined sequence of steps that are used to perform a specific task or solve a problem. It's like a plan to get something done in a computer program.

Five important properties of algorithms:

Termination (Finiteness): An algorithm must stop after a finite number of steps. Importance: To ensure that the algorithm completes and provides a result in a reasonable time, and doesn't run indefinitely.

Clarity (Definiteness): Each instruction in an algorithm should be clear, precise, and unambiguous. Importance: To avoid confusion and ensure that the algorithm is executed consistently every time, leading to predictable outcomes.

Input: An algorithm may accept zero or more inputs. Importance: Inputs allow algorithms to handle different sets of data and solve a wider range of problems dynamically, making them more versatile.

Output: An algorithm must produce at least one output. Importance: The output is the solution to the problem that the algorithm is designed to solve; without output, the algorithm would be pointless.

Feasibility (Effectiveness): Every step in an algorithm must be simple and practically executable. Importance: Ensures that the algorithm can actually be implemented and run using available resources and within acceptable time limits.

question2 answer:
2a.
i. strcpy() - String Copy Function: This function is used to copy the contents of one string to another string variable.

Syntax:
char * strcpy(char * destination, const char * source);

Example:
#include <stdio.h>
#include <string.h>

int main() {
char source[] = "Coding";
char target[10];
strcpy(target, source);
printf("The copied string is: %s\n", target);
return 0;
}

Output:
The copied string is: Coding

ii. strlen() - String Length Function: This function calculates and returns the length of a given string (excluding the null terminator).

Syntax:
size_t strlen(const char * str);

Example:
#include <stdio.h>
#include <string.h>

int main() {
char text[] = "Example String";
int length = strlen(text);
printf("The length of the string is: %d\n", length);
return 0;
}

Output:
The length of the string is: 14

2b.

#include <stdio.h>
#include <string.h>

int main() {
  char name_input[50];

  printf("Enter your name: ");
  scanf("%s", name_input);

  printf("ASCII values of name:\n");
  for(int i = 0; name_input[i] != '\0'; i++) {
    printf("%c -> %d\n", name_input[i], (int)name_input[i]);
  }

  return 0;
}


Example Output:
Enter your name: Ethan
ASCII values of name:
E -> 69
t -> 116
h -> 104
a -> 97
n -> 110